@page "/myorders"
@using Microsoft.AspNetCore.Authorization
@using System.Security.Claims
@inject IRepository Repository
@attribute [Authorize]

<PageTitle>Blazing Pizza - My Orders</PageTitle>

<div class="main">
    <TemplatedList Loader="LoadOrders">
        <Loading>Lädt...</Loading>
        <Empty>
            <h2>Keine Bestellungen vorhanden</h2>
            <a class="btn btn-success" href="">Bestelle Pizza</a>
        </Empty>
        <Item Context="item">
            <div class="col">
                <h5>@item.Order.CreatedTime.ToLongDateString()</h5>
                Artikel:
                <strong>@item.Order.Pizzas.Count()</strong>
                Gesamtpreis:
                <strong>€@item.Order.GetFormattedTotalPrice()</strong>
            </div>
            <div class="col">
                Status: <strong>@item.StatusText</strong>
            </div>
            <div class="col flex-grow-0">
                <a href="myorders/@item.Order.OrderId" class="btn btn-success"></a>
                Track &gt;
            </div>
        </Item>
    </TemplatedList>
</div>

@code {
    async Task<IEnumerable<OrderWithStatus>> LoadOrders()
    {
        var ordersWithStatus = Enumerable.Empty<OrderWithStatus>();
        try
        {
            ordersWithStatus = await Repository.GetOrdersAsync();
        }
        catch (AccessTokenNotAvailableException ex)
        {
            ex.Redirect();
        }
        return ordersWithStatus;
    }
}